/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package library;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Niranjan
 */
public class Bookspage extends javax.swing.JFrame {
    public Connection con;
    public PreparedStatement pstmt;
    public ResultSet rs;
    public ResultSetMetaData rsmd;
 
    
    void initConnection(){
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            try{
                con = DriverManager.getConnection("jdbc:oracle:thin:@DESKTOP-2U6J23R:1521:orcl","scott","tiger");
                System.out.println("Connected to the database");
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(this, "Connection Failed\n"+ex.getMessage());
            }
        }
        catch(ClassNotFoundException ex){
            JOptionPane.showMessageDialog(this, "Driver not found\n"+ex.getMessage());
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Unknown Error\n"+ex.getMessage());
        }
    }
    
    DefaultTableModel model;
    public void setBookdetailstotable(){
        initConnection();
        try{
    
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from books");
            
            while(rs.next()){
                String book_id=rs.getString("book_id");
                String title=rs.getString("title");
                String author =rs.getString("author");
                String publisher =rs.getString("publisher");
                String publisher_date =rs.getString("publisher_date");
                String genre =rs.getString("genre");
                String type =rs.getString("type");
                String language =rs.getString("language");
                Object[] obj={book_id,title,author,publisher,genre,type,language,publisher_date};
                
                model=(DefaultTableModel) booktable_bp.getModel();
                model.addRow(obj);
                
                
                
            }
           
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }
    
    
    public Bookspage() {
        initComponents();
        setBookdetailstotable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane1 = new javax.swing.JScrollPane();
        booktable_bp = new javax.swing.JTable();
        booksearchfield_bp = new javax.swing.JTextField();
        booksearchbtn = new javax.swing.JButton();
        Backbtn = new javax.swing.JButton();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        booktable_bp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Bookid", "Title", "Author", "Publisher", "Genre", "Type", "Language", "Publisher date"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(booktable_bp);
        if (booktable_bp.getColumnModel().getColumnCount() > 0) {
            booktable_bp.getColumnModel().getColumn(0).setResizable(false);
            booktable_bp.getColumnModel().getColumn(1).setResizable(false);
            booktable_bp.getColumnModel().getColumn(2).setResizable(false);
            booktable_bp.getColumnModel().getColumn(3).setResizable(false);
            booktable_bp.getColumnModel().getColumn(4).setResizable(false);
            booktable_bp.getColumnModel().getColumn(5).setResizable(false);
            booktable_bp.getColumnModel().getColumn(6).setResizable(false);
            booktable_bp.getColumnModel().getColumn(7).setResizable(false);
        }

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, 700, 330));

        booksearchfield_bp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booksearchfield_bpActionPerformed(evt);
            }
        });
        getContentPane().add(booksearchfield_bp, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 30, 170, 30));

        booksearchbtn.setText("Enter");
        booksearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                booksearchbtnActionPerformed(evt);
            }
        });
        getContentPane().add(booksearchbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 30, -1, -1));

        Backbtn.setText("Back");
        Backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbtnActionPerformed(evt);
            }
        });
        getContentPane().add(Backbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 440, 90, 30));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void booksearchfield_bpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booksearchfield_bpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_booksearchfield_bpActionPerformed

    private void booksearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_booksearchbtnActionPerformed
        String stitle =booksearchfield_bp.getText();
        String sql = "select * from books where title like ? or Book_id like ? or Author like ? or publisher like ? or genre like ? or type like ? or language like ? or publisher_date like ?";
        try{
            pstmt = con.prepareStatement(sql);
            pstmt.setString(1, stitle+"%");
            pstmt.setString(2, stitle+"%");
            pstmt.setString(3, stitle+"%");
            pstmt.setString(4, stitle+"%");
            pstmt.setString(5, stitle+"%");
            pstmt.setString(6, stitle+"%");
            pstmt.setString(7, stitle+"%");
            pstmt.setString(8, stitle+"%");
            rs = pstmt.executeQuery();
            model=(DefaultTableModel) booktable_bp.getModel();
            model.setRowCount(0);
            while(rs.next()){
                String book_id=rs.getString("book_id");
                String title=rs.getString("title");
                String author =rs.getString("author");
                String publisher =rs.getString("publisher");
                String publisher_date =rs.getString("publisher_date");
                String genre =rs.getString("genre");
                String type =rs.getString("type");
                String language =rs.getString("language");
                Object[] obj={book_id,title,author,publisher,genre,type,language,publisher_date};
                model.addRow(obj);
            }
        }
        catch(Exception e )
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_booksearchbtnActionPerformed

    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        home newhome = new home();
        newhome.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Bookspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Bookspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Bookspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Bookspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Bookspage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backbtn;
    private javax.swing.JButton booksearchbtn;
    private javax.swing.JTextField booksearchfield_bp;
    private javax.swing.JTable booktable_bp;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
