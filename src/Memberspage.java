/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package library;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Niranjan
 */
public class Memberspage extends javax.swing.JFrame {
    public Connection con;
    public PreparedStatement pstmt;
    public ResultSet rs;
    public ResultSetMetaData rsmd;
 
    
    void initConnection(){
        try{
            Class.forName("oracle.jdbc.OracleDriver");
            try{
                con = DriverManager.getConnection("jdbc:oracle:thin:@DESKTOP-2U6J23R:1521:orcl","scott","tiger");
                System.out.println("Connected to the database");
            }
            catch(SQLException ex){
                JOptionPane.showMessageDialog(this, "Connection Failed\n"+ex.getMessage());
            }
        }
        catch(ClassNotFoundException ex){
            JOptionPane.showMessageDialog(this, "Driver not found\n"+ex.getMessage());
        }
        catch(Exception ex){
            JOptionPane.showMessageDialog(this, "Unknown Error\n"+ex.getMessage());
        }
    }
    
    
    DefaultTableModel model;
    public void setMemberdetailstotable(){
        initConnection();
        try{
    
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("select * from memberinfo");
            
            while(rs.next()){
                String member_id=rs.getString("memberid");
                String name=rs.getString("name");
                String address =rs.getString("address");
                String phone =rs.getString("phone_no");
                String email =rs.getString("email");
                String member_type =rs.getString("member_type");
                String join_date =rs.getString("join_date");
                String expdate =rs.getString("expdate");
                String fines =rs.getString("fines");
                Object[] obj={member_id,name,address,phone,email,member_type,join_date,expdate,fines};
                
                model=(DefaultTableModel) membertable_mp.getModel();
                model.addRow(obj);
                
                
                
            }
           
        }
        catch(Exception e){
            e.printStackTrace();
        }
        
    }
    /**
     * Creates new form Memberspage
     */
    public Memberspage() {
        initComponents();
        setMemberdetailstotable();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        membertable_mp = new javax.swing.JTable();
        membersearchfield_mp = new javax.swing.JTextField();
        membersearchbtn = new javax.swing.JButton();
        Backbtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        membertable_mp.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Memberid", "Name", "Address", "Phone No", "Email", "Member Type", "Join Date", "Exp Date", "Fines"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        membertable_mp.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(membertable_mp);

        membersearchfield_mp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membersearchfield_mpActionPerformed(evt);
            }
        });

        membersearchbtn.setText("Enter");
        membersearchbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                membersearchbtnActionPerformed(evt);
            }
        });

        Backbtn.setText("Back");
        Backbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackbtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(341, 341, 341)
                .addComponent(Backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(359, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(260, 304, Short.MAX_VALUE)
                    .addComponent(membersearchfield_mp, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(60, 60, 60)
                    .addComponent(membersearchbtn)
                    .addGap(0, 184, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 725, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(432, Short.MAX_VALUE)
                .addComponent(Backbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 20, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(membersearchfield_mp, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(membersearchbtn))
                    .addGap(20, 20, 20)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 348, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 63, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void membersearchfield_mpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membersearchfield_mpActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_membersearchfield_mpActionPerformed

    private void membersearchbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_membersearchbtnActionPerformed
        String stitle =membersearchfield_mp.getText();
        String sql = "select * from memberinfo where memberid like ? or name like ? or address like ? or phone_no like ? or email like ? or member_type like ? or join_date like ? or expdate like ? or fines like ?";
        try{
            pstmt = con.prepareStatement(sql);
            pstmt.setString(1, stitle+"%");
            pstmt.setString(2, stitle+"%");
            pstmt.setString(3, stitle+"%");
            pstmt.setString(4, stitle+"%");
            pstmt.setString(5, stitle+"%");
            pstmt.setString(6, stitle+"%");
            pstmt.setString(7, stitle+"%");
            pstmt.setString(8, stitle+"%");
            pstmt.setString(9, stitle+"%");
            rs = pstmt.executeQuery();
            model=(DefaultTableModel) membertable_mp.getModel();
            model.setRowCount(0);
            while(rs.next()){
                String member_id=rs.getString("memberid");
                String name=rs.getString("name");
                String address =rs.getString("address");
                String phone =rs.getString("phone_no");
                String email =rs.getString("email");
                String member_type =rs.getString("member_type");
                String join_date =rs.getString("join_date");
                String expdate =rs.getString("expdate");
                String fines =rs.getString("fines");
                Object[] obj={member_id,name,address,phone,email,member_type,join_date,expdate,fines};
                model.addRow(obj);
            }
        }
        catch(Exception e )
        {
            e.printStackTrace();
        }
    }//GEN-LAST:event_membersearchbtnActionPerformed

    private void BackbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackbtnActionPerformed
        home newhome = new home();
        newhome.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_BackbtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Memberspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Memberspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Memberspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Memberspage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Memberspage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Backbtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton membersearchbtn;
    private javax.swing.JTextField membersearchfield_mp;
    private javax.swing.JTable membertable_mp;
    // End of variables declaration//GEN-END:variables
}
